{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleContactChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","css","form","htmlFor","label","type","id","onChange","pattern","title","required","btn","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","onFilterInputValue","App","filter","addContact","data","contact","find","con","toLowerCase","alert","prevState","sort","a","b","localeCompare","deleteContacs","contactId","onFilteredContacts","includes","localStorage","getItem","parsContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dde1246.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2iqGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2fst-\",\"name\":\"ContactForm_name__1O-zL\",\"number\":\"ContactForm_number__3B3bb\",\"btn\":\"ContactForm_btn__2pF5Z\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport css from \"./ContactForm.module.css\";\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = shortid.generate();\r\n  numberId = shortid.generate();\r\n\r\n  handleContactChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={css.form}>\r\n          <label htmlFor={this.nameId} className={css.label}>\r\n            Name:\r\n            <input\r\n              className={css.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              id={this.nameId}\r\n              onChange={this.handleContactChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <br />\r\n\r\n          <label htmlFor={this.numberId} className={css.label}>\r\n            Number:\r\n            <input\r\n              className={css.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              id={this.numberId}\r\n              onChange={this.handleContactChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <br />\r\n\r\n          <button type=\"submit\" className={css.btn}>\r\n            add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <span>{name}: </span>\r\n          <span>{number}</span>\r\n          <button className={css.btn} onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Filter = ({ value, onFilterInputValue }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onFilterInputValue} />\r\n    </label>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { ContactForm } from \"./Components/ContactForm/ContactForm.jsx\";\nimport { ContactList } from \"./Components/ContactList/ContactList.jsx\";\nimport { Filter } from \"./Components/Filter/Filter.jsx\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"myContacts\");\n    const parsContacts = JSON.parse(contacts);\n    if (parsContacts) {\n      this.setState({ contacts: parsContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"myContacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (data) => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (\n      this.state.contacts.find(\n        (con) => con.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`${contact.name} is alresdy in contacts`);\n      return;\n    } else\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        ),\n      }));\n  };\n\n  deleteContacs = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  onFilterInputValue = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  onFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilterInputValue={this.onFilterInputValue} />\n        <ContactList\n          contacts={this.onFilteredContacts()}\n          onDeleteContact={this.deleteContacs}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}